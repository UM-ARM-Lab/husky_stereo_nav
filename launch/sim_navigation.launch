<launch>

    <arg name="robot_namespace" default="/" />
    <!-- ZED topic args -->
    <arg name="left_image" value="/zed2i/zed_node/left/image_rect_color" />
    <arg name="right_image" value="/zed2i/zed_node/right/image_rect_color" />
    <arg name="left_camera_info" value="/zed2i/zed_node/left/camera_info" />
    <arg name="right_camera_info" value="/zed2i/zed_node/right/camera_info" />
    <arg name="rgb_image" value="/zed2i/zed_node/rgb/image_rect_color" />

    <arg name="camera_name" default="zed2i" /> <!-- The name you want -->
    <arg name="camera_model" default="zed2i" /> <!-- 'zed' or 'zedm' or 'zed2' -->
    <arg name="node_name" default="zed_node" />

    <!-- Base frame -->
    <arg name="base_frame" default="base_link" />

    <!-- Publish ZED urdf -->
    <arg name="publish_urdf" default="true" />

    <arg name="camera_id" default="0" />
    <arg name="gpu_id" default="-1" />

    <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_x" default="0.0" />
    <arg name="cam_pos_y" default="0.0" />
    <arg name="cam_pos_z" default="0.0" />

    <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll" default="0.0" />
    <arg name="cam_pitch" default="0.0" />
    <arg name="cam_yaw" default="0.0" />

    <!-- Load robot description -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find husky_stereo_nav)/urdf/husky.urdf.xacro' robot_namespace:=$(arg robot_namespace)" />

    <arg name="world_name" default="worlds/empty.world" />

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" /> <!-- world_name is wrt GAZEBO_RESOURCE_PATH environment variable -->
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="gui" value="true" />
        <arg name="headless" value="false" />
        <arg name="debug" value="false" />
    </include>

    <include file="$(find husky_stereo_nav)/launch/control.launch"></include>

    <arg name="x" default="0.0" />
    <arg name="y" default="0.0" />
    <arg name="z" default="0.0" />
    <arg name="yaw" default="0.0" />
    <arg name="joystick" default="true" />

    <!-- Spawn robot in gazebo -->
    <node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model husky
              -robot_namespace $(arg robot_namespace)" />

    <!-- Visual Odometry -->
    <node pkg="rtabmap_ros" type="stereo_odometry" name="stereo_odometry" output="screen">
        <remap from="left/image_rect" to="$(arg left_image)" />
        <remap from="right/image_rect" to="$(arg right_image)" />
        <remap from="left/camera_info" to="$(arg left_camera_info)" />
        <remap from="right/camera_info" to="$(arg right_camera_info)" />
        <remap from="odom" to="/odometry" />

        <param name="frame_id" type="string" value="base_link" />
        <param name="odom_frame_id" type="string" value="odom" />

        <param name="Odom/InlierDistance" type="string" value="0.1" />
        <param name="Odom/MinInliers" type="string" value="10" />
        <param name="Odom/RoiRatios" type="string" value="0.03 0.03 0.04 0.04" />
        <param name="Odom/MaxDepth" type="string" value="10" />

        <param name="GFTT/MaxCorners" type="string" value="500" />
        <param name="GFTT/MinDistance" type="string" value="5" />
        <param name="publish_tf" type="bool" value="true" />
    </node>

    <group ns="rtabmap">
        <!-- Visual Localization using pre recorded 3D map -->
        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="">
            <param name="frame_id" type="string" value="base_link" />
            <param name="subscribe_stereo" type="bool" value="true" />
            <param name="subscribe_depth" type="bool" value="false" />

            <remap from="left/image_rect" to="$(arg left_image)" />
            <remap from="right/image_rect" to="$(arg right_image)" />
            <remap from="left/camera_info" to="$(arg left_camera_info)" />
            <remap from="right/camera_info" to="$(arg right_camera_info)" />

            <remap from="odom" to="/odometry" />

            <param name="queue_size" type="int" value="30" />

            <!-- RTAB-Map's parameters -->
            <param name="Mem/IncrementalMemory" type="string" value="false" />
            <param name="Rtabmap/TimeThr" type="string" value="700" />
            <param name="Rtabmap/DetectionRate" type="string" value="1" />

            <!-- <param name="Kp/WordsPerImage" type="string" value="200"/>
         <param name="Kp/RoiRatios" type="string" value="0.03 0.03 0.04 0.04"/>

         <param name="SURF/HessianThreshold" type="string" value="1000"/>

         <param name="LccBow/MaxDepth" type="string" value="5"/>
         <param name="LccBow/MinInliers" type="string" value="10"/>
         <param name="LccBow/InlierDistance" type="string" value="0.05"/>

         <param name="LccReextract/Activated" type="string" value="true"/>
         <param name="LccReextract/MaxWords" type="string" value="500"/> -->
        </node>
    </group>

    <!-- run the map server to serve the static map -->
    <!-- <node name="map_server" pkg="map_server" type="map_server" args="$(find rtabmap_ros)/launch/husky_nav/map.yaml" /> -->


    <!-- ROS navigation stack move_base -->
    <!-- <group ns="planner"> -->
    <remap from="openni_points" to="/zed2i/zed_node/point_cloud/cloud_registered" />
    <!-- <remap from="base_scan" to="/base_scan"/> -->
    <remap from="map" to="/rtabmap/grid_map" />
    <!-- <remap from="move_base_simple/goal" to="/planner_goal"/> -->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find husky_stereo_nav)/config/costmap_common.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find husky_stereo_nav)/config/costmap_common.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find husky_stereo_nav)/config/costmap_local.yaml" command="load" />
        <rosparam file="$(find husky_stereo_nav)/config/costmap_global.yaml" command="load" />
        <rosparam file="$(find husky_stereo_nav)/config/base_local_planner_params.yaml" command="load" />
    </node>

    <!-- <param name="cmd_vel/abtr_priority" value="10"/> -->
    <!-- </group> -->


    <!-- Arbitration between teleop and planner
    <node name="register_cmd_eta" pkg="abtr_priority" type="register"
        args="/cmd_eta /teleop/cmd_eta"/>
    <node name="register_cmd_vel" pkg="abtr_priority" type="register"
        args="/cmd_vel /planner/cmd_vel"/>
I would assume that for this simple setup the performance of the arm-system and wifi-link is not the problem. What could be the cause of this, and how can I proceed in nailing this down further?
  
	<node pkg="tf" type="static_transform_publisher" name="base_to_zed_base_link"
	    args="0 0 0 0 0 0 base_link zed_base_link 100" />  -->


    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find husky_stereo_nav)/rviz/zed_outdoor_nav.rviz" />

</launch>