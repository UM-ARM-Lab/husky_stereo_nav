<launch>

    <!-- ZED topics -->
    <arg name="left_image" value="/zed2i/zed_node/left/image_rect_color" />
    <arg name="right_image" value="/zed2i/zed_node/right/image_rect_color" />
    <arg name="left_camera_info" value="/zed2i/zed_node/left/camera_info" />
    <arg name="right_camera_info" value="/zed2i/zed_node/right/camera_info" />

    <arg name="zed_frame" default="zed_mount_link" />
    <arg name="rtabmap_database_path" default="~/.ros/rtabmap.db" />
    <arg name="static_map_path" default="$(find husky-stereo-nav)/maps/lab_filtered1.yaml" />
    <arg name="rviz_config_path" default="$(find husky-stereo-nav)/rviz/zed_outdoor_nav.rviz" />

    <group ns="zed2i">
        <!-- ZED wrapper node -->
        <node name="zed_node" pkg="zed_wrapper" type="zed_wrapper_node" output="screen" required="true">
            <rosparam file="$(find zed_wrapper)/params/common.yaml" command="load" />
            <rosparam file="$(find zed_wrapper)/params/zed2i.yaml" command="load" />

            <param name="general/camera_name" value="zed2i" />
            <param name="general/base_frame" value="$(arg zed_frame)" />
            <param name="general/zed_id" value="0" />
            <param name="general/gpu_id" value="-1" />

            <!-- Disable publishing of ZED odometry TFs-->
            <param name="pos_tracking/publish_tf" value="false" />
            <param name="pos_tracking/publish_map_tf" value="false" />
        </node>

        <!-- static TF publisher for ZED mount -->
        <node pkg="tf" type="static_transform_publisher" name="zed_mount_link_publisher" args="0.4 0 0.8 0 0 0 base_link zed_mount_link 100" />

        <!-- load ZED URDF -->
        <param name="zed2i_description" command="$(find xacro)/xacro '$(find zed_wrapper)/urdf/zed_descr.urdf.xacro'
                        camera_name:=zed2i
                        camera_model:=zed2i
                        base_frame:=$(arg zed_frame)" />

        <!-- ZED URDF publisher -->
        <node name="zed2i_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" required="true">
            <remap from="robot_description" to="zed2i_description" />
        </node>
    </group>


    <!-- Visual Odometry -->
    <node pkg="rtabmap_ros" type="stereo_odometry" name="stereo_odometry" output="screen">
        <remap from="left/image_rect" to="$(arg left_image)" />
        <remap from="right/image_rect" to="$(arg right_image)" />
        <remap from="left/camera_info" to="$(arg left_camera_info)" />
        <remap from="right/camera_info" to="$(arg right_camera_info)" />
        <remap from="odom" to="/odometry" />
        <param name="frame_id" type="string" value="base_link" />

        <!-- TODO: find out what this means -->
        <param name="odom_frame_id" type="string" value="odom" />

        <param name="Odom/InlierDistance" type="string" value="0.1" />
        <param name="Odom/MinInliers" type="string" value="10" />
        <param name="Odom/RoiRatios" type="string" value="0.03 0.03 0.04 0.04" />
        <param name="Odom/MaxDepth" type="string" value="10" />

        <param name="GFTT/MaxCorners" type="string" value="500" />
        <param name="GFTT/MinDistance" type="string" value="5" />
        <param name="publish_tf" type="bool" value="true" />
    </node>

    <group ns="rtabmap">
        <!-- Visual Localization using pre recorded 3D map -->
        <!--delete_db_on_start-->
        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="database_path:=$(arg rtabmap_database_path)">

            <param name="frame_id" type="string" value="base_link" />
            <param name="subscribe_stereo" type="bool" value="true" />

            <!-- TODO: is this necessary? -->
            <param name="subscribe_depth" type="bool" value="false" />

            <remap from="left/image_rect" to="$(arg left_image)" />
            <remap from="right/image_rect" to="$(arg right_image)" />
            <remap from="left/camera_info" to="$(arg left_camera_info)" />
            <remap from="right/camera_info" to="$(arg right_camera_info)" />
            <remap from="odom" to="/odometry" />

            <param name="queue_size" type="int" value="30" />

            <!-- RTAB-Map parameters -->
            <param name="Mem/IncrementalMemory" type="string" value="false" />
            <param name="Rtabmap/TimeThr" type="string" value="700" />
            <param name="Rtabmap/DetectionRate" type="string" value="1" />
            <param name="publish_tf" type="bool" value="true" />
            <param name="Grid/MaxObstacleHeight" type="string" value="1" />
            <param name="Grid/NoiseFilteringRadius" type="string" value="0.4" />
            <param name="Grid/NoiseFilteringMinNeighbors" type="string" value="10" />
            <!-- <param name="Kp/WordsPerImage" type="string" value="200"/>
            <param name="Kp/RoiRatios" type="string" value="0.03 0.03 0.04 0.04"/>
            <param name="SURF/HessianThreshold" type="string" value="1000"/>
            <param name="LccBow/MaxDepth" type="string" value="5"/>
            <param name="LccBow/MinInliers" type="string" value="10"/>
            <param name="LccBow/InlierDistance" type="string" value="0.05"/>
            <param name="LccReextract/Activated" type="string" value="true"/>
            <param name="LccReextract/MaxWords" type="string" value="500"/> -->
        </node>
    </group>

    <!-- map server to serve static map -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg static_map_path)" />

    <!-- ROS navigation stack move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <remap from="openni_points" to="/zed2i/zed_node/point_cloud/cloud_registered" />
        <!-- <remap from="map" to="/rtabmap/grid_map"/> -->

        <rosparam file="$(find husky-stereo-nav)/config/costmap_common.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find husky-stereo-nav)/config/costmap_common.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find husky-stereo-nav)/config/costmap_local.yaml" command="load" />
        <rosparam file="$(find husky-stereo-nav)/config/costmap_global.yaml" command="load" />
        <rosparam file="$(find husky-stereo-nav)/config/trajectory_planner.yaml" command="load" />
    </node>

    <!-- launch custom RViz config -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg rviz_config_path)" />

</launch>
